name: Main Commit Checks
on: [push]

jobs:
    build:
        runs-on: macos-latest

        strategy:
            matrix:
                # 可以在此测试一个或多个 Node 版本
                node: [18.20.3]

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            # 缓存 pnpm store
            - name: Cache pnpm store
              uses: actions/cache@v2
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('app/pnpm-lock.yaml') }}

            # 缓存 node_modules
            - name: Cache node_modules
              uses: actions/cache@v2
              with:
                  path: app/node_modules
                  key: ${{ runner.os }}-modules-${{ hashFiles('app/pnpm-lock.yaml') }}

            - run: sudo npm install -g pnpm

            - name: Install dependencies
              run: pnpm install --fetch-timeout 1000000
              env:
                  CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
              working-directory: ./app

            - name: Verify directory
              run: |
                  cd app
                  echo "Current directory: $(pwd)"
                  ls -la

            # - name: linting
            #   run: pnpm run lint
            #   working-directory: ./app

            # - name: jest-run
            #   run: pnpm test
            #   working-directory: ./app

            # 如果 .npm 目录存在，则重置其所有者以避免权限问题
            - name: Fix npm cache permissions
              run: |
                  if [ -d "/Users/runner/.npm" ]; then
                    sudo chown -R $USER:$(id -gn $USER) /Users/runner/.npm
                  fi

            - name: Start server
              run: |
                  cd app
                  pnpm serve --mode e2e

              env:
                  USE_HTTP: true

            - name: Wait for server
              run: npx wait-on 'http://localhost:5000/' --timeout 580000

            - name: Run Cypress tests
              uses: cypress-io/github-action@v6
              env:
                  USE_HTTP: true
              with:
                  working-directory: ./app
                  browser: chrome
                  headless: true

            # These extract all artifacts out from the container to git so they can be previewed
            - name: Extract screenshots to git
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                  name: cypress-screenshots
                  path: app/cypress/screenshots

            # Test run video was always captured, so this action uses "always()" condition
            - name: Extract videos to git
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: cypress-videos
                  path: app/cypress/videos
